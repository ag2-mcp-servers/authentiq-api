# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T08:56:23+00:00

from __future__ import annotations

from datetime import datetime
from typing import Optional

from pydantic import BaseModel, Field


class AuthentiqID(BaseModel):
    devtoken: Optional[str] = Field(None, description='device token for push messages')
    sub: str = Field(..., description='UUID and public signing key')


class Claims(BaseModel):
    email: Optional[str] = Field(None, description='')
    phone: Optional[str] = Field(None, description='')
    scope: str = Field(..., description='claim scope')
    sub: str = Field(..., description='UUID')
    type: Optional[str] = Field(None, description='')


class Error(BaseModel):
    detail: Optional[str] = None
    error: int
    title: Optional[str] = None
    type: Optional[str] = Field(None, description='unique uri for this error')


class PushToken(BaseModel):
    aud: str = Field(..., description='audience (URI)')
    exp: Optional[int] = None
    iat: Optional[int] = None
    iss: str = Field(..., description='issuer (URI)')
    nbf: Optional[int] = None
    sub: str = Field(..., description='UUID and public signing key')


class KeyDeleteResponse(BaseModel):
    status: Optional[str] = Field(None, description='pending or done')


class KeyPostResponse(BaseModel):
    secret: Optional[str] = Field(None, description='revoke key')
    status: Optional[str] = Field(None, description='registered')


class KeyPKDeleteResponse(BaseModel):
    status: Optional[str] = Field(None, description='done')


class KeyPKGetResponse(BaseModel):
    since: Optional[datetime] = None
    status: Optional[str] = None
    sub: Optional[str] = Field(
        None, description='base64safe encoded public signing key'
    )


class KeyPKPostResponse(BaseModel):
    status: Optional[str] = Field(None, description='confirmed')


class KeyPKPutResponse(BaseModel):
    status: Optional[str] = Field(None, description='confirmed')


class LoginPostResponse(BaseModel):
    status: Optional[str] = Field(None, description='sent')


class ScopePostResponse(BaseModel):
    job: Optional[str] = Field(None, description='20-character ID')
    status: Optional[str] = Field(None, description='waiting')


class ScopeJobDeleteResponse(BaseModel):
    status: Optional[str] = Field(None, description='done')


class ScopeJobGetResponse(BaseModel):
    exp: Optional[int] = None
    field: Optional[str] = None
    sub: Optional[str] = Field(
        None, description='base64safe encoded public signing key'
    )


class ScopeJobPostResponse(BaseModel):
    status: Optional[str] = Field(None, description='confirmed')


class ScopeJobPutResponse(BaseModel):
    jwt: Optional[str] = Field(None, description='result is JWT or JSON??')
    status: Optional[str] = Field(None, description='ready')
